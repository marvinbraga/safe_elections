[tool.poetry]
name = "safe-elections"
version = "0.1.0"
description = ""
authors = ["marvinbraga <mvbraga@gmail.com>"]
readme = "README.md"
packages = [{include = "safe_elections"}]

[tool.poetry.dependencies]
python = "^3.10"
django = "^4.1.3"
djangorestframework = "^3.14.0"
django-environ = "^0.9.0"
psycopg2-binary = "^2.9.5"
django-cors-headers = "^3.13.0"
django-filter = "^22.1"
drf-yasg = "^1.21.4"
argon2-cffi = "^21.3.0"
djoser = "^2.1.0"
pyjwt = "^2.6.0"
gunicorn = "^20.1.0"
django-extensions = "^3.2.1"


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
ipython = "^8.6.0"
flake8 = "^5.0.4"
codecov = "^2.1.12"
coverage = "^6.5.0"
pytest-cov = "^4.0.0"
isort = "^5.10.1"
black = "^22.10.0"
invoke = "^1.7.3"
pre-commit = "^2.20.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
known_django = "django"
skip = "app/wsgi.py"
skip_glob = "*migrations*"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
line_length = 88

[tool.black]
py37 = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
)/
'''

[tool.mypy]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "app.settings"
python_files = ["test_*.py"]
addopts = ["--no-migrations", "--reuse-db", "-s"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
branch = true
source = ["."]
omit = [
    "*__init__*",
    "*migrations*",
    "*test*",
    "*/asgi.py",
    "*/wsgi.py",
    "*/settings.py",
    "*/celery.py",
    "scripts/*",
    "static/*",
    "staticfiles/*",
    "manage.py",
    "tasks.py",
]

[tool.coverage.report]
fail_under = 85
show_missing = true
